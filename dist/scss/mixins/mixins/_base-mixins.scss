@use 'sass:math' as math;
@use "../../variables/variables" as vars;
@use "../../functions/functions" as func;

@mixin add-background-svg($image-name) {
    background-image: url("#{vars.$icons-folder-path}/#{$image-name}.svg");
    background-repeat: no-repeat;
}

@mixin embed-container($height, $width) {
    padding-bottom: math.percentage(math.div($height,$width));
}

@mixin button-unstyled {
    background-color: func.color('transparent');
    border: 0;
    border-radius: 0;
    font-weight: func.font-weight("normal");
    margin: 0;
    padding: 0;
    text-align: left;
    -webkit-font-smoothing: auto;
    color: inherit;
    min-height: auto;

    &:hover,
    &:focus {
        background-color: func.color('transparent');
        color: inherit;
    }
}

@mixin focus-outline {
    outline: vars.$theme-focus-width vars.$theme-focus-style func.color("focus");
}

@mixin focus-offset {
    outline-offset: vars.$theme-focus-offset;
}

@mixin focus {
    @include focus-outline;
    @include focus-offset;
}

// Screen reader only helper
@mixin sr-only() {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px; // stylelint-disable-line declaration-property-unit-disallowed-list
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    border: 0;
    left: -999em;
}

// This "negates" the sr-only() helper; useful if
// we want the default state of something to be
// for screen readers only, but we want to force
// it to show for sighted users under more specific
// conditions.
@mixin not-sr-only() {
    position: static;
}

.sr-only {
    @include sr-only;
}

// Unstyled list helper
@mixin unstyled-list() {
    margin: 0;
    list-style-type: none;
    padding-left: 0;

    > li {
        margin-bottom: 0;
        margin-top: 0;
        padding-left: 0;

        &::before {
            content: "" !important;
            padding-right: 0 !important;
        }
    }
}

// nobullet list helper
@mixin nobullet-list() {
    list-style-type: none;
    padding-left: 0;

    > li {
        padding-left: 0;

        &::before {
            content: "" !important;
            padding-right: 0 !important;
        }
    }
}

// noindent list helper
@mixin noindent-list() {
    > li {
        padding-left: calc(8px + 6px);

        &::before {
            left: 0;
        }
    }
}

// Font smoothing mixin
@mixin font-smoothing {
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
}

// Appearance
@mixin appearance-none {
    appearance: none;
}
