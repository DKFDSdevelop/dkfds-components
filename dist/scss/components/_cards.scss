@use "../variables" as vars;
@use "../functions" as func;
@use "../mixins" as mixins;

%-long {
    @include mixins.media-breakpoint-up(sm) {
        flex-direction: row;

        .new-card-image {
            min-width: 33%;
            max-width: 33%;
            align-items: center;
    
            img {
                height: 100%;
                object-fit: cover;
            }
        }
    }

    .new-card-content {
        .card-actions {
            padding: func.units(5) 0 0 0; // top | right | bottom | left
        }
    }
}

.new-card-wrapper {
    height: 100%;
}

.card-row {
    max-width: none !important;
    list-style-type: none;

    li::before {
        content: "" !important;
    }
}

.card-row:not(.row) li {
    padding-left: 0;
    padding-right: 0;
}

.new-card {
    border: func.border('very-low-contrast');
    border-radius: func.border-radius('medium');
    overflow: clip;
    margin-bottom: func.units(6);
    height: calc(100% - func.units(6));
    display: flex;
    flex-direction: column;
    min-width: 100%;

    .new-card-image {
        width: 100%;
        display: flex;
        background-color: func.color('gray-100');

        img {
            width: 100%;
            max-width: 100%;
            background-color: func.color('gray-200');
        }
    }

    .new-card-content {
        padding-left: func.units(5);
        padding-right: func.units(5);
        padding-top: func.units(5);
        margin-bottom: func.units(5);
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        overflow-wrap: break-word;

        .subheading {
            margin-bottom: func.units(2);
            display: block;
        }
    
        h1, .h1, h2, .h2, h3, .h3, h4, .h4, h5, .h5, h6, .h6, .heading {
            font-size: func.font-size('3xl');
            margin: 0;
            font-weight: 600;
        }
    
        p {
            margin-bottom: 0;
        }
    
        & > :last-child {
            margin-bottom: 0;
        }
    }

    .card-actions {
        padding-left: func.units(5);
        padding-right: func.units(5);
        padding-bottom: func.units(5);

        .nobullet-list {
            margin: 0;

            li:first-child {
                margin-top: 0;
            }
        }

        .button-group {
            margin-top: 0;
            margin-bottom: calc(0px - func.units(4));

            .button, .button-wrapper {
                margin-top: func.units(0);
                margin-bottom: func.units(4);
            }
        }
    }

    &.long {
        @extend %-long;
    }
}

a.new-card {
    text-decoration: none;
    color: func.color('black');

    h1, .h1, h2, .h2, h3, .h3, h4, .h4, h5, .h5, h6, .h6, .heading {
        text-decoration: underline;
        font-weight: 600;
    }

    .card-actions {
        display: flex;
        margin-top: auto;

        & > .icon-svg {
            margin-left: auto;
        }
    }

    &:link, &:visited, &:hover, &:active {
        color: func.color('black');
    }

    &:hover, &:active {
        border-color: func.color('gray-300');
        .subheading {
            color: func.color('gray-600');
        }
    }

    &:hover {
        background-color: func.color('gray-100');
    }

    &:active {
        background-color: func.color('gray-200');
    }

    &.long {
        @extend %-long;

        @include mixins.media-breakpoint-up(sm) {
            .card-actions {
                margin-left: auto;
            }

            .new-card-content {
                max-width: calc(100% - func.units(5) - func.units(5, 'rem') - func.units(5));
            }
    
            .new-card-image + .new-card-content {
                max-width: calc(67% - func.units(5) - func.units(5, 'rem') - func.units(5));
            }
        }
    }
}