@use "../../variables/variables" as vars;
@use "../../functions/functions" as func;

@mixin responsive-table() {
    display: block;

    thead {
        display: none;
    }

    tbody,
    tr {
        display: block;
    }

    tr {
        border-bottom: func.border(vars.$table-row-border);

        &:last-child {
            border-bottom: none;
        }
    }

    td,
    th {
        display: block;
        border: none;
        padding-left: calc(func.units(4) - 1px); // 1px for the border
        padding-right: calc(func.units(4) - 1px); // 1px for the border
        padding-top: func.units(4);
        padding-bottom: func.units(4);

        &:last-child {
            padding-bottom: calc(func.units(4) - 1px); // 1px for the border
        }

        &[data-title]:not([data-title=""])::before {
            content: attr(data-title);
            text-align: left;
            display: block;
            font-weight: func.font-weight(vars.$table-head-font-weight);
        }
    }

    &.table--compact {

        th,
        td {
            padding-top: func.units(3);
            padding-bottom: func.units(3);

            &:last-child {
                padding-bottom: calc(func.units(3) - 1px); // 1px for the border
            }
        }
    }

    &.table--extracompact {

        th,
        td {
            padding-top: 1px;
            padding-bottom: 1px;

            &:last-child {
                padding-bottom: 0;
            }
        }
    }

    &.table--borderless, &.structured-list {

        td,
        th {
            padding-left: 0;
            padding-right: 0;
        }

        tr {
            &:first-child {

                td,
                th {
                    &:first-child {
                        border-top: func.border(vars.$table-row-border);
                    }
                }
            }

            &:last-child {

                td,
                th {
                    border-bottom: none;

                    &:last-child {
                        border-bottom: func.border(vars.$table-row-border);
                    }
                }
            }
        }
    }

    &.table--zebra.table--borderless {

        td,
        th {
            padding-left: func.units(4);
            padding-right: func.units(4);
        }
    }

    &.structured-list {
        
        tbody tr {
            &:first-child td {
                border-top: none;
            }

            th {
                padding-bottom: 0;
            }

            td:first-of-type {
                padding-top: 0;
            }
        }
    }
}