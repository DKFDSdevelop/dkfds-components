@use "../variables" as vars;
@use "../functions" as func;
@use "../mixins" as mixins;

.step-indicator-button {
    display: inline-flex;
    width: 100%;
    border-radius: func.border-radius('medium');
    @include mixins.add-background-svg('more-vert');
    background-position: calc(100% - 10px);
    background-size: func.units(5, 'rem');
    min-height: func.units(8);
    border: 1px solid func.color('gray-300');
    background-color: func.color('white');
    align-items: center;
    padding-left: func.units(4, 'rem');
    padding-right: func.units(8, 'rem');
    margin-top: func.units(6);
    margin-bottom: func.units(5);

    strong {
        white-space: break-spaces;
    }
}

.fds-modal.modal-step-indicator {
    margin: 0;
    justify-content: center;

    .modal-content {
        align-self: flex-end;
        margin: 0;
        border-bottom-left-radius: func.border-radius('none');
        border-bottom-right-radius: func.border-radius('none');

        .modal-header {
            border-bottom: 1px solid func.color('black');
            margin-bottom: func.units(6);
            padding: func.units(4) func.units(5); // top and bottom | left and right

            .modal-title {
                margin: 0;
            }

            .modal-close {
                position: static;
            }
        }

        .modal-body {
            padding: func.units(0) func.units(5) func.units(4); // top | left and right | bottom

            @include mixins.media-breakpoint-up(md) {
                padding: func.units(0) func.units(5) func.units(4); // top | left and right | bottom
            }
        }
    }
}

.step-indicator {
    max-width: none;
    @include mixins.unstyled-list;

    li {
        margin-bottom: func.units(4);
        line-height: 1.5;

        .step {
            display: flex;
            color: func.color('black');
            border-radius: func.units(405);
            width: fit-content;
            text-decoration: none;
            align-items: flex-start;

            .step-number, .step-icon {
                min-width: func.units(7);
                min-height: func.units(7);
                text-align: center;
                font-weight: func.font-weight("normal");
                color: func.color('black');
                font-size: func.font-size('sm');
                margin-right: func.units(305);
                border: 0;
                background-color: func.color('gray-100');
                border-radius: func.units(5);
                padding-top: func.units(3);
                flex: 0 0 auto;

                svg {
                    vertical-align: baseline;
                }
            }

            .step-number {
                padding-bottom: func.units(3);

                span {
                    min-width: func.units(5, 'rem');
                    display: inline-block;
                }
            }

            .step-title {
                margin-right: func.units(3);
                display: block;
                text-decoration: underline;
                position: relative;
                padding-top: func.units(3);
            }
    
            .step-information {
                display: block;
                color: func.color('gray-500');
                font-weight: func.font-weight('normal');
            }

            &:hover {
                .step-number, .step-icon {
                    background-color: func.color('gray-200');
                }
            }
        }
    }

    li.current {
        .step {
            font-weight: func.font-weight('bold');

            .step-number, .step-icon {
                color: func.color('white');
                background-color: func.color('gray-600');
                font-weight: func.font-weight('bold');
            }

            .step-title {
                text-decoration: none;
            }
        }
    }

    li.error {
        .step {
            .step-number, .step-icon {
                background-color: func.color('error-light');
            }
        }
    }

    li.disabled {
        .step {
            .step-title {
                text-decoration: none;
            }

            &:hover {
                .step-number, .step-icon {
                    background-color: func.color('gray-100');
                }
            }
        }
    }

    li.error.current {
        .step {
            .step-number, .step-icon {
                color: func.color('black');
            }
        }
    }
}