@use "../variables" as vars;
@use "../functions" as func;
@use "../mixins" as mixins;
@use "function-link";

// ----------------------------------------
// Accordion
// ----------------------------------------
.accordion-button {
  font-weight: func.font-weight('bold');
  text-align: left;
  min-height: auto;
  background-color: func.color(vars.$accordion-button-background-color-default);
  color: func.color(vars.$accordion-button-color-default);
  cursor: pointer;
  margin: 0;
  display: block;
  line-height: 1.5;
  padding: func.units(4, 'rem') func.units(4, 'rem') func.units(4, 'rem') func.units(9, 'rem'); // top | right | bottom | left
  width: 100%;
  font-size: func.font-size('sm');
  position: relative;
  border-radius: func.border-radius('medium');

  &::before {
    content: '';
    @include mixins.add-background-svg('minus');
    position: absolute;
    height: func.units(vars.$accordion-button-icon-size, 'rem');
    width: func.units(vars.$accordion-button-icon-size, 'rem');
    left: func.units(4, 'rem');
  }

  &:hover {
    background-color: func.color(vars.$accordion-button-background-color-hover);
    color: func.color(vars.$accordion-button-color-hover);
  }

  @include mixins.media-breakpoint-up(md) {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  h1, .h1,
  h2, .h2,
  h3, .h3,
  h4, .h4,
  h5, .h5,
  h6, .h6 {
    margin: 0;
  }
  .icon_text {
    font-weight: func.font-weight("normal");
    font-size: func.font-size('sm');
    margin-right: func.units(3);
    overflow-wrap: break-word;
    max-width: calc(100% - func.units(3) - func.units(5)); // Icon margin and icon size;
  }
  .accordion-title {
    max-width: 100%;
    overflow-wrap: break-word;
  }
  .accordion-icon {
    line-height: func.units(5, 'rem');
    position: initial;
    text-align: left;
    display: block;
    top: 0.8rem;
   @include mixins.media-breakpoint-up(md) {
      text-align: end;
      display: flex;
      align-items: center;
      max-width: 30%;
      margin-left: func.units(4);
   }

    .icon-svg {
      fill: func.color(vars.$accordion-button-color-default);
      flex-shrink: 0;
      vertical-align: bottom;
    }
    &:hover .icon-svg{
      fill: func.color(vars.$accordion-button-color-hover);
    }
  }

  &[aria-expanded="true"] {
    border-radius: func.border-radius('medium') func.border-radius('medium') 0 0;
  }

  &[aria-expanded="false"] {
    border-radius: func.border-radius('medium');

    &::before {
      content: '';
      @include mixins.add-background-svg('plus');
    }
  }
}

button.accordion-bulk-button{
  @extend .function-link;
  
  background-repeat: no-repeat;
  background-position: left top;
  padding-left:func.units(505);
  margin-bottom: func.units(4);
  
  &[data-accordion-bulk-expand="true"] {
    background-image: url(vars.$icons-folder-path + 'plus.svg');
  }
  &[data-accordion-bulk-expand="false"] {
    background-image: url(vars.$icons-folder-path + 'minus.svg');
  }
}

.accordion {
  margin: 0;
  padding: 0;
  width: 100%;
  @include mixins.unstyled-list;
  > ul li ul {
    list-style: disc;
    > li > ul {
      list-style: circle;
      > li > ul {
        list-style: square;
      }
    }
  }

  + .accordion {
    margin-top: func.units(3, 'rem');
  }
  > li {
    list-style: none;
    margin-bottom: func.units(3, 'rem');
    width: 100%;
    border-radius: func.border-radius('medium');

    &.accordion-error .accordion-button,
    &.accordion-error .accordion-content {
        background-image: linear-gradient(to right, func.color(vars.$accordion-button-error-border-color) 4px, transparent 4px);
        background-position-x: 0;
    }

    > h1, > h2, > h3, > h4, > h5, > h6{
      margin-top: 0;
      margin-bottom: 0;
      letter-spacing: normal;
      max-width: none;
    }
  }
}

.accordion-content {
  background-color: func.color(vars.$accordion-content-background-color);
  color: func.color(vars.$accordion-content-color);
  overflow: auto;
  padding: func.units(3, 'rem') func.units(4, 'rem') func.units(5, 'rem') func.units(9, 'rem'); // top | right | bottom | left
  border-radius: 0 0 func.border-radius('medium') func.border-radius('medium');
  p, h1, h2, h3, h4, h5, .h1, .h2, .h3, .h4, .h5{
    color: func.color(vars.$accordion-content-color);
  }

  > *:first-child {
    margin-top: 0;
  }

  > *:last-child {
    margin-bottom: 0;
  }

  &:not([aria-hidden]) {
      display: none;
  }

  &[aria-hidden="true"] {
    display: none;
  }
}
