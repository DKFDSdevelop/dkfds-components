@use "../variables/variables" as vars;
@use "../functions/functions" as func;
@use "../mixins/mixins" as mixins;

html {
  font-family: vars.$typography-font-family;
  font-size: vars.$root-font-size;
}

body {
  font-size: func.font-size(vars.$typography-base-font-size);
}

p {
  line-height: func.units(vars.$typography-base-line-height, 'rem');
  margin-bottom: func.units(3, 'rem');
  margin-top: func.units(4, 'rem');
}

a {
  color: func.color("link");

  &:hover,
  &.link-hover {
    color: func.color("link-hover");

    &:disabled,
    .disabled {
      background-color: transparent !important;
    }

  }

  &:focus,
  &.link-focus {
    color: func.color("link-focus");
    @include mixins.focus();
  }

  &:visited,
  &.link-visited {
    color: func.color("link-visited");
  }

  &:disabled,
  &.disabled {
    cursor: not-allowed !important;
    color: func.color('disabled') !important;
    opacity: 0.3;

    &:focus {
      outline: none;
      background-color: transparent;
    }
  }

  .background-dark & {
    &:not(.button) {
      color: func.color('white');
    }

    &:disabled,
    &.disabled {
      box-shadow: none !important;
      cursor: not-allowed !important;
      color: func.color('disabled-light') !important;
      outline-offset: inherit !important;

      &:focus {
        outline: none;
        background-color: transparent;
      }
    }
  }

  &.bold-link {
    font-weight: func.font-weight("semibold");
  }

  &:not(.button, .full-width-image) {
    max-width: vars.$typography-text-max-width;
  }
}

h1, .h1 {
  @include mixins.h1;
}
h2, .h2{
  @include mixins.h2;
}

h3, .h3 {
  @include mixins.h3;
}

h4, .h4{
  @include mixins.h4;
}

h5, .h5{
  @include mixins.h5;
}

h6, .h6{
  @include mixins.h6;
}

p, .body-text, .body-copy-text{
  @include mixins.body-copy-text;
}
figcaption, .figcaption{
  @include mixins.caption;
  p{
    @include mixins.caption;
  }
}
.subheading{
  @include mixins.subheading;
}

.font-lead {
  font-size: func.font-size(vars.$typography-lead-font-size);
  font-weight: func.font-weight("normal");
  line-height: func.units(vars.$typography-lead-line-height, 'rem');
  max-width: vars.$typography-text-max-width;
  color: func.color('ink');
  letter-spacing: vars.$typography-lead-letter-spacing;
}
.article{
  font-size: func.font-size(vars.$typography-article-font-size);
  font-weight: func.font-weight("normal");
  line-height: func.units(vars.$typography-article-line-height, 'rem');
  max-width: vars.$typography-text-max-width;
  color: func.color('ink');
  letter-spacing: vars.$typography-article-letter-spacing;
}
small, .small-text {
  @include mixins.small-text();
}

.weight-normal {
  font-weight: func.font-weight("normal");
}

.weight-semibold {
  font-weight: func.font-weight("semibold");
}
.facit {
  border-bottom: func.border(10);
  border-bottom-style: double;
  border-bottom-width: 4px;
}
strong, b, .bold {
  font-weight: func.font-weight("bold");
}

.italic, em {
  font-style: italic;
}


.form-label {
  @include mixins.form-label-text;
}


h1:focus, .h1:focus,
h2:focus, .h2:focus,
h3:focus, .h3:focus,
h4:focus, .h4:focus,
h5:focus, .h5:focus,
h6:focus, .h6:focus {
  outline: none;
}

h1, .h1{
  margin-bottom: func.units(4, 'rem');
  margin-top: 0rem;
}

h2, .h2 {
  margin-top: func.units(6, 'rem');
  margin-bottom: func.units(4, 'rem');
  @include mixins.media-breakpoint-up(md) {
    margin-top: func.units(7, 'rem');
  }
}
h3, .h3{
  margin-top: func.units(6, 'rem');
  margin-bottom: func.units(4, 'rem');
  @include mixins.media-breakpoint-up(md) {
    margin-top: func.units(7, 'rem');
  }
}
h4, .h4{
  margin-top: func.units(5, 'rem');
  margin-bottom:  func.units(4, 'rem');
}
h5, .h5{
  margin-top: func.units(5, 'rem');
  margin-bottom: 0;
}
h6, .h6{
  margin-top: func.units(5, 'rem');
  margin-bottom: 0;
}
.font-lead{
  margin-top: func.units(5, 'rem');
  margin-bottom:  func.units(4, 'rem');
}
p, .body-text{
  margin-top: func.units(4, 'rem');
  margin-bottom: func.units(4, 'rem');
}
h5, .h5, h6, .h6{
  & + p, & + ul, & + ol{
    margin-top: 0; //if next sibling after h5 og h6 is a p-tag, no margin-top on p-tag.
  }
}

//a function link, does not look like a link
button.function-link{
  background: none;
  padding: 0px;
  text-decoration: underline;
  text-align: left;
}
.function-link{
  border: none;
  @include mixins.body-copy-text;
  cursor: pointer;
  display: inline-block;
  &:hover, &:visited, &:focus{
    color: func.color('ink');
  }
  .icon-svg{
    margin-right: func.units(2);
    fill: currentColor;
  }

  &.link-right {
    text-align: right;
  }
}

.back-link{
  border-bottom: func.border(10);
  color: func.color('black');
  text-decoration: none;
  display: inline-block;
  position: relative;
  margin-bottom: func.units(5);
  @include mixins.media-breakpoint-up(lg) {
    margin-bottom: func.units(6);
  }
  line-height: 2.4rem;
  padding-left: 14px;
  &::before{
    display: block;
    width: 0;
    height: 0;
    border-style: solid;
    border-color: transparent;
    -webkit-clip-path: polygon(0% 50%, 100% 100%, 100% 0%);
    clip-path: polygon(0% 50%, 100% 100%, 100% 0%);
    border-width: 5px 6px 5px 0;
    border-right-color: inherit;
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    margin: auto;
  }
  &:active, &:focus, &:hover, &:visited{
    color: func.color('black');
  }
}

.icon-link{
  line-height: func.units(vars.$typography-body-text-line-height, 'rem');
  .icon-svg{
    margin-left: func.units(2);
    width: 1.6rem;
    height: 1.6rem;
    fill: currentColor;
  }
}

 //styling for link in heading
h1, .h1,
h2, .h2,
h3, .h3,
h4, .h4,
h5, .h5,
h6, .h6{
  a, a:hover, a:visited, a:focus{
    text-decoration: underline;
  }

  a.search-link {
    text-decoration: none;
    &:visited {
      text-decoration: underline;
    }
    &:focus {
      text-decoration: none;
    }
    &:hover {
      text-decoration: underline;
    }
  }
}

// Remove user agent styles
cite,
var,
address,
dfn {
  font-style: normal;
}

//max-width of 66ch for text
h1, .h1,
h2, .h2,
h3, .h3,
h4, .h4,
h5, .h5,
h6, .h6{
  max-width: vars.$typography-text-max-width;
}
p,
ul:not(.accordion):not(.accordion-bordered):not(.mainmenu):not(.inline-list):not(.tabnav):not(.sidenav-list):not(.sidenav-sub_list):not(.sidemenu),
ol:not(.accordion):not(.accordion-bordered):not(.sidenav-list):not(.sidemenu){
  max-width: vars.$typography-text-max-width;
}
.font-lead{
  max-width: vars.$typography-text-max-width;
}

.form-label, .form-hint, .form-error-message{
  max-width: vars.$typography-text-max-width;
}
.form-checkbox+label, .form-radio+label{
  max-width: vars.$typography-text-max-width;
}

.displayheading {
  &-1 {
    font-weight: func.font-weight("medium");
    font-size: func.font-size(vars.$typography-display-1-heading-font-size);
    line-height: func.units(vars.$typography-display-1-heading-line-height, 'rem');
    margin-bottom: 0;
    color: func.color('black');
    letter-spacing: vars.$typography-display-1-heading-letter-spacing;
  }
  &-2 {
    font-weight: func.font-weight("medium");
    font-size: func.font-size(vars.$typography-display-2-heading-font-size);
    line-height: func.units(vars.$typography-display-2-heading-line-height, 'rem');
    margin-bottom: 0;
    color: func.color('black');
    letter-spacing: vars.$typography-display-2-heading-letter-spacing;
  }
}

.text-positive {
  color: func.color("text-positive");
}

.text-negative {
  color: func.color("text-negative");
}

.color-text-black {
  color: func.color('black');
}

.background-dark {
  background-color: func.color('black');

  p, span{
    color: func.color('white');
  }
}

.field-group-title {
  font-weight: func.font-weight("normal");

  ~ hr {
    border: 2px solid func.color('black');
  }
}

h1, h2, h3, h4, h5, h6, p, legend, strong, b, cite, var, address, dfn{
  text-rendering: optimizeLegibility; //Vigtig — den er vidst default i Webkit nu, men den har effekt på andre engines
  -webkit-font-smoothing: none; //Fikser for tyk typografi i Webkit-baserede browsers)
  -webkit-font-smoothing: subpixel-antialiased;
  -webkit-font-smoothing: antialiased;
  font-feature-settings: "kern";
  -webkit-font-feature-settings: "kern";
  -moz-font-feature-settings: "kern";
  -moz-font-feature-settings: "kern=1";
}

.uppercase{
  text-transform: uppercase;
}
.lowercase{
  text-transform: lowercase;
}
