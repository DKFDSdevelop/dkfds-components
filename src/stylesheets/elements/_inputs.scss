@use 'sass:math';

.form-group{
  margin-top: units(5); //4
  &:first-child{
    margin-top: 0;
  }
}

// Hint text
.form-hint {
  display: block;
  color: color($form-hint-text-color);
  font-size: font-size($form-hint-font-size);
  line-height: units($form-hint-line-height, 'rem');
  letter-spacing: $form-hint-letter-spacing;
  font-weight: font-weight($form-hint-font-weight);
}
.form-label {
  display: inline-block;
  @include form-label-text();
}



////////////////////
//** Text input **//
////////////////////

.form-input{
  appearance: none;
  border: border($input-border);
  border-radius: $input-border-radius;
  color: color($input-text-color); // standardize on firefox
  display: block;
  font-size: font-size($input-font-size);
  line-height: units($input-line-height, 'rem');
  padding: calc(8px - #{border-width($input-border)}) calc(16px - #{border-width($input-border)});
  width: 100%;
  max-width: 32rem;
  margin-top: units(3);
  text-align: left;
  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
    /* IE10+ CSS styles go here */
    height: calc(#{units($input-line-height, 'rem')} + (8px * 2));
  }

  &:focus, &.focus{
    @include focus();
  }
}

table {
  .form-input {
    margin-top:0;
  }
}
textarea.form-input{
  height: auto;
}
textarea.no-resize{
  resize: none;
}

.form-input-wrapper{
  display:flex;
  .form-input{
    -webkit-box-flex: 0;
    -ms-flex: 0 1 auto;
    flex: 0 1 auto;
    &:focus{
      position: relative;
      z-index: 1;
    }
  }
  .form-input-prefix + .form-input, &.form-input-wrapper--prefix .form-input{
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
  &.form-input-wrapper--suffix .form-input{
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }
  .form-input-prefix, .form-input-suffix {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-weight: font-weight("normal");
    font-size: font-size($input-font-size);
    line-height: units($input-line-height, 'rem');
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    display: inline-block;
    min-width: 40px;
    padding: calc(#{units(3)} - #{border-width($input-border)}) calc(#{units(3)} - #{border-width($input-border)});
    margin-top: units(3);
    border: border($input-border);
    background-color: color($input-prefix-suffix-background-color);
    text-align: center;
    white-space: nowrap;
    cursor: default;
    -webkit-box-flex: 0;
    -ms-flex: 0 0 auto;
    flex: 0 0 auto;
    
  }
  .form-input-suffix {
    border-left: 0;
    border-top-right-radius: $input-border-radius;
    border-bottom-right-radius: $input-border-radius;
  }
  .form-input-prefix {
    border-right: 0;
    border-top-left-radius: $input-border-radius;
    border-bottom-left-radius: $input-border-radius;
  }
}


////////////////
//** Select **//
////////////////

.form-select {
    background-color: color($select-background-color);
    background-image: url($icons-folder-path+'/'+$select-icon);
    background-position: calc(100% - 10px);
    background-repeat: no-repeat;
    border: border($select-border);
    border-radius: $select-border-radius;
    color: color($select-text-color);
    display: block;
    font-size: font-size($select-font-size);
    line-height: units($select-line-height, 'rem');
    height: calc(#{units($select-line-height, 'rem')} + (8px * 2));
    max-width: 32rem;
    width: 100%;
    margin-top: units(3);
    text-align: left;
    padding: calc(8px - #{border-width($select-border)}) calc(16px - #{border-width($select-border)});
    padding-right: 32px;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;

    &:-moz-focusring {
        color: transparent;
        text-shadow: 0 0 0 color('black');
    }

    &:focus,
    &.focus {
        @include focus();
    }

    &::-ms-expand {
        display: none;
    }

    &:disabled {
        background-color: color($input-disabled-background-color);
        color: color($input-disabled-text-color);
        cursor: not-allowed;
    }

    option {
        @-moz-document url-prefix() {
            font-family: Helvetica, Arial, sans-serif;
        }
    }

}

table {
  .form-select {
    margin-top:0;
  }
}

//////////////////////
//** Input states **//
//////////////////////


$input-top-bottom-padding-feedback: calc(8px - #{$input-border-width-feedback});
$input-left-right-padding-feedback: calc(16px - #{$input-border-width-feedback});

.form-group.form-error {
  border-left: $form-group-error-border-width solid color($form-group-error-border-color);
  padding-left: calc(#{units(4)} - 4px);

  .form-input,
  .form-select {
    border: $input-border-width-feedback solid color($input-border-color-feedback-error);
    padding: $input-top-bottom-padding-feedback $input-left-right-padding-feedback;
  }

}
.form-error-message {
  @include form-label-text();
  display: block;
  color: color('error');
  margin-top: units(2);
}

.form-group.form-success {
  .form-input,
  .form-select {
    border: $input-border-width-feedback solid color($input-border-color-feedback-success);
    padding: $input-top-bottom-padding-feedback $input-left-right-padding-feedback;
  }
}

input[type=text],
input[type=email],
input[type=number],
input[type=password],
input[type=search],
input[type=tel],
input[type=url],
textarea {
  &:disabled {
    background-color: color($input-disabled-background-color);
    color: color($input-disabled-text-color);
    cursor: not-allowed;
  }
}

input[readonly][type=text]{
  margin-top: 0px;
  padding-top: 0px;
  padding-bottom: 0px;
  height: auto;
}
input[readonly][type=text], textarea[readonly]{
  background-color: transparent;
  color: color($input-text-color);
  border: none;
  cursor: default;
  padding: 0;
}

/////////////////////////
//** Character limit **//
/////////////////////////

.form-limit {
  .form-limit-error {
    border: $input-border-width-feedback solid color($input-border-color-feedback-error);
    padding: $input-top-bottom-padding-feedback $input-left-right-padding-feedback;
  }

  .character-limit {
    margin-top: units(2);
  
    &.limit-exceeded {
      color: color($input-text-character-limit-exceeded-color);
    }
  }
}


/////////////////////////////////
// Custom checkboxes & radio buttons
/////////////////////////////////

/* Variables for readability */
$checkbox-radio-size: units($input-checkbox-radio-size);
$label-distance: units($input-checkbox-radio-label-distance);
$checkmark-size: units($input-checkbox-checkmark-size);
$content-border-width: units(2);
$expand-hit-area: units(2);
$button-distance: units(3);

/* Radio/checkbox element including label, button, helptext and hidden content */
.form-group-checkbox,
.form-group-radio {
    margin-top: $button-distance;
    position: relative; // Needed for the nested input buttons using absolute position

    &:first-of-type {
        margin-top: 0;
    }
}

legend, .form-error-message, .form-hint {
    & + .form-group-checkbox:first-of-type,
    & + .form-group-radio:first-of-type {
        margin-top: $button-distance;
    }
}

/* Hide the original radio and checkbox button */
.form-checkbox,
.form-radio {
    position: absolute;
    left: 0;
    top: 0;
    box-sizing: border-box;
    cursor: pointer;
    z-index: 1;
    margin: 0;
    margin-top: $expand-hit-area;
    opacity: 0;
    height: $checkbox-radio-size;
    width: $checkbox-radio-size;
}

/* Radio and checkbox label/text */
.form-checkbox + label,
.form-radio + label {
    cursor: pointer;
    font-weight: font-weight($input-checkbox-radio-label-font-weight);
    line-height: units($input-checkbox-radio-size, 'rem');
    display: inline-block;
    outline: none;
    color: color($input-checkbox-radio-label-color);
    padding-left: calc($checkbox-radio-size + $label-distance);
    padding-top: $expand-hit-area;
    padding-bottom: $expand-hit-area;
}

/* Unchecked radio and checkbox button */
.form-checkbox + label::before,
.form-radio + label::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    box-sizing: border-box;
    display: inherit;
    background-color: color($input-checkbox-radio-unchecked-background-color);
    border: 2px solid color($input-checkbox-radio-unchecked-border-color);
    margin-right: $label-distance;
    height: $checkbox-radio-size;
    width: $checkbox-radio-size;
    margin-top: calc((units($input-checkbox-radio-size, 'rem') / 2) - ($checkbox-radio-size / 2) + $expand-hit-area); // Ensure correct placement of input on text zoom
}

/* Unchecked checkbox button border radius */
.form-checkbox + label::before {
    border-radius: 2px;
}

/* Unchecked radio button border radius */
.form-radio + label::before {
    border-radius: 100%;
}

/* Checked checkbox */
.form-checkbox:checked + label,
.form-checkbox[aria-checked="mixed"] + label {

    /* Checkbox button background */
    &::before {
        background-color: color($input-checkbox-checked-background-color);
        border: 2px solid color($input-checkbox-checked-border-color);
    }

    /* Checkbox button checkmark */
    &::after {
        content: "";
        position: absolute;
        left: 0;
        top: 0;
        display: inherit;
        background-color: color($input-checkbox-checkmark-color);
        -webkit-mask-size: $checkmark-size $checkmark-size;
        mask-size: $checkmark-size $checkmark-size;
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-position: center;
        mask-position: center;
        width: $checkbox-radio-size;
        height: $checkbox-radio-size;
        margin-top: calc((units($input-checkbox-radio-size, 'rem') / 2) - ($checkbox-radio-size / 2) + $expand-hit-area); // Ensure correct placement of input on text zoom
    }
}

/* 'Normal' checkbox checkmark */
.form-checkbox:checked + label::after {
    -webkit-mask-image: url($icons-folder-path+'/done.svg');
    mask-image: url($icons-folder-path+'/done.svg');
}

/* 'Mixed' checkbox checkmark */
.form-checkbox[aria-checked="mixed"] + label::after {
    -webkit-mask-image: url($icons-folder-path+'/remove.svg');
    mask-image: url($icons-folder-path+'/remove.svg');
}

/* Checked radio */
.form-radio:checked + label {

    /* Radio button background */
    &::before {
        background-color: color($input-radio-checked-background-color);
        border: 2px solid color($input-radio-checked-border-color);
    }

    /* Radio button 'dot' */
    &::after {
        content: "";
        position: absolute;
        display: inherit;
        height: units($input-radio-dot-size);
        width: units($input-radio-dot-size);
        left: calc(($checkbox-radio-size - units($input-radio-dot-size)) / 2);
        top: calc(($checkbox-radio-size - units($input-radio-dot-size)) / 2);
        background-color: color($input-radio-dot-color);
        border-radius: 100%;
        margin-top: calc((units($input-checkbox-radio-size, 'rem') / 2) - ($checkbox-radio-size / 2) + $expand-hit-area); // Ensure correct placement of input on text zoom
    }
}

/* Focus */
.form-checkbox:focus + label::before,
.form-checkbox.focus + label::before,
.form-radio:focus + label::before,
.form-radio.focus + label::before {
    @include focus();
}

/* Helptext */
.form-checkbox + label + .form-hint,
.form-radio + label + .form-hint {
    padding-left: calc($checkbox-radio-size + $label-distance);
    margin-top: -$expand-hit-area;
}

/* Hidden content */
.checkbox-content,
.radio-content {
    border-left: $content-border-width solid color($input-checkbox-radio-content-border-color);
    margin-left: calc(($checkbox-radio-size - $content-border-width) / 2);
    padding-left: calc(($checkbox-radio-size + (2 * $label-distance) - $content-border-width) / 2);
    padding-top: units(4);
    margin-top: units(2);
    margin-bottom: units(305);
    padding-bottom: units(505);
    
    &[aria-hidden="true"] {
        display: none;
    }
}

/* Special styling when radio/checkboxes are used to select table rows */
th, 
td {
    .form-group-checkbox,
    .form-group-radio {
        margin-top: 0;
        width: $checkbox-radio-size;
        height: $checkbox-radio-size;

        .form-checkbox,
        .form-radio {
            margin-top: 0;

            & + label {
                padding-left: 0;
        
                &::before {
                    margin-right: 0;
                    margin-top: calc((units($input-checkbox-radio-size, 'rem') / 2) - ($checkbox-radio-size / 2)); // Ensure correct placement of input on text zoom
                }

                &::after {
                    margin-top: calc((units($input-checkbox-radio-size, 'rem') / 2) - ($checkbox-radio-size / 2)); // Ensure correct placement of input on text zoom
                }
            }
        }
    }
}

/* Disabled */
.form-checkbox:disabled,
.form-radio:disabled {
    cursor: not-allowed;
}

/* Disabled label and button */
.form-checkbox:disabled + label,
.form-radio:disabled + label {
    cursor: not-allowed;
    color: color($input-checkbox-radio-disabled-label-color);

    &::before {
        background-color: color($input-checkbox-radio-disabled-unchecked-background-color);
        border: 2px solid color($input-checkbox-radio-disabled-unchecked-border-color);
    }
}

/* Disabled checked checkbox */
.form-checkbox:disabled:checked + label,
.form-checkbox:disabled[aria-checked="mixed"] + label {

    &::before {
        background-color: color($input-checkbox-disabled-checked-background-color);
        border: 2px solid color($input-checkbox-disabled-checked-border-color);
    }

    &::after {
        background-color: color($input-checkbox-disabled-checkmark-color);
    }
}

/* Disabled checked radio */
.form-radio:disabled:checked + label {

    &::before {
        background-color: color($input-radio-disabled-checked-background-color);
        border: 2px solid color($input-radio-disabled-checked-border-color);
    }

    &::after {
        background-color: color($input-radio-disabled-dot-color);
    }
}




/////////////////////////
// Range inputs
/////////////////////////
[type=range] {
  appearance: none;
  border: none;
  padding-left: 0;
  width: 100%;
}

[type=range]::-webkit-slider-runnable-track {
  background: color($input-range-track-default-background-color);
  border: border($input-range-track-default-border);
  cursor: pointer;
  height: 1.2rem;
  width: 100%;
}

[type=range]::-moz-range-track {
  background: color($input-range-track-default-background-color);
  border: border($input-range-track-default-border);
  cursor: pointer;
  height: 1.2rem;
  width: 100%;
}

[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  border: border($input-range-thumb-default-border);
  height: 2.2rem;
  border-radius: 1.5rem;
  background: color($input-range-thumb-default-background-color);
  cursor: pointer;
  margin-top: -.65rem;
  width: 2.2rem;
}

[type=range]::-moz-range-thumb {
  background: color($input-range-thumb-default-background-color);
  border: border($input-range-thumb-default-border);
  border-radius: 1.5rem;
  cursor: pointer;
  height: 2.2rem;
  width: 2.2rem;
}

/////////////////////////
//Date input
/////////////////////////
.date-group {
  display: flex;
  align-items: flex-end;
  label {
    margin-top: 0;
    font-weight: font-weight("normal");
  }

  input[type=number]::-webkit-inner-spin-button,
  input[type=number]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  .form-group-day,
  .form-group-month,
  .form-group-year {
    margin-right: units(4);
    margin-top: 0;
  }

  .form-group-day,
  .form-group-month{
    width: calc(2px + #{units(4)} + #{units(4)} + 2ch );
    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
      width: 6.4ex;
    }
  }

  .form-group-year {
    width: calc(2px + #{units(4)} + #{units(4)} + 4ch );
    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
      width: 9ex;
    }
  }

  .button-open-calendar{
    margin-bottom: 8px;
    display: inline-flex;
  }
}

input[type='number'] {
  -moz-appearance:textfield !important;
}
//Below fix bug where date-inputs to number-wheels in chrome.
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none !important;
}

.form-label + input[type=file]{
  margin-top: units(3);
}

input[type=file]{
  display: block;
}
